{"slots":{"0":{"name":"screen","type":{"events":[],"methods":[]}},"1":{"name":"mat1","type":{"events":[],"methods":[]}},"2":{"name":"mat2","type":{"events":[],"methods":[]}},"3":{"name":"mat3","type":{"events":[],"methods":[]}},"4":{"name":"mat4","type":{"events":[],"methods":[]}},"5":{"name":"mat5","type":{"events":[],"methods":[]}},"6":{"name":"mat6","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"unit.hide()\nunit.setTimer(\"Live\",1)\nscreen.activate()","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"0"},{"code":"screen.clear()\nscreen.deactivate()","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"1"},{"code":"-- Material lots must be named mat - mat6\n-- Slot for screen must be named screen\n-- Connect in order: screen, mat1, mat2, mat3, mat4, mat5, mat6\n-- Update Lua Parameters with the material names and your max container volumes\n-- This script should run under a tick filter named \"Live\"\n-- The \"Live\" tick filter should be initialized in unit.start()\nversion=0.1\n\n-- Exports --------------------------------------------\nlocal title = \"T1 Material Status\" --export: Title of table\n\nlocal units              = 1     --export: Use 0 for T, 1 for KL or 2 for L, 3 for auto kL/L\nlocal autoUnitsThreshold = 10000 --export: Threshold in L used to switch between kL and L when units mode 3 is used\n\nlocal mat1Type = \"hydrogen\" --export: Material type in first container\nlocal mat2Type = \"oxygen\"   --export: Material type in second container\nlocal mat3Type = \"aluminum\" --export: Material type in third container\nlocal mat4Type = \"carbon\"   --export: Material type in fourth container\nlocal mat5Type = \"iron\"     --export: Material type in fifth container\nlocal mat6Type = \"silicon\"  --export: Material type in sixth container\n\nlocal maxMat1 = 179.2 --export: This is the maximum volume allowed in container in kL. Skill dependent, update as needed\nlocal maxMat2 = 179.2 --export: This is the maximum volume allowed in container in kL. Skill dependent, update as needed\nlocal maxMat3 = 179.2 --export: This is the maximum volume allowed in container in kL. Skill dependent, update as needed\nlocal maxMat4 = 179.2 --export: This is the maximum volume allowed in container in kL. Skill dependent, update as needed\nlocal maxMat5 = 179.2 --export: This is the maximum volume allowed in container in kL. Skill dependent, update as needed\nlocal maxMat6 = 179.2 --export: This is the maximum volume allowed in container in kL. Skill dependent, update as needed\n\nlocal statusFontSize = 4           --export: Status text font size in vw\nlocal status1Text    = \"Good\"      --export: Status text for level 1\nlocal status2Text    = \"Low\"       --export: Status text for level 2\nlocal status3Text    = \"Very Low\"  --export: Status text for level 3\nlocal status4Text    = \"Critical\"  --export: Status text for level 4\nlocal status1Color   = \"#008000\"   --export: Color for status text level 1\nlocal status2Color   = \"#FFFF00\"   --export: Color for status text level 2\nlocal status3Color   = \"#FF4500\"   --export: Color for status text level 3\nlocal status4Color   = \"#FF0000\"   --export: Color for status text level 4\nlocal status1Limit   = 50          --export: Between 100% and this value will show status text 1\nlocal status2Limit   = 35          --export: Between status 1 limit and this value will show status text 2\nlocal status3Limit   = 15          --export: Between status 2 limit and this value will show status text 3\n-------------------------------------------------------\n\nlocal statusText  = {status1Text, status2Text, status3Text, status4Text}\nlocal statusColor = {status1Color, status2Color, status3Color, status4Color}\nlocal statusLimit = {100, status1Limit, status2Limit, status3Limit, 0}\n\nlocal rows = {mat1Type, mat2Type, mat3Type, mat4Type, mat5Type, mat6Type}\n\nlocal maxVol = {\n    [mat1Type] = maxMat1,\n    [mat2Type] = maxMat2,\n    [mat3Type] = maxMat3,\n    [mat4Type] = maxMat4,\n    [mat5Type] = maxMat5,\n    [mat6Type] = maxMat6\n}\n\nlocal matMass = {\n    [mat1Type] = mat1.getItemsMass(),\n    [mat2Type] = mat2.getItemsMass(),\n    [mat3Type] = mat3.getItemsMass(),\n    [mat4Type] = mat4.getItemsMass(),\n    [mat5Type] = mat5.getItemsMass(),\n    [mat6Type] = mat6.getItemsMass()\n}\n\n-- Densities with 3 places have been determined with container.getItemsMass() of 1L\n-- The others I don't currently have access to, so the values come from their descriptions\nlocal matDensity = {\n-- raw ores\n--  tier 1\n    hematite   = 5.040,\n    bauxite    = 1.281,\n    quartz     = 2.650,\n    coal       = 1.346,\n--  tier 2\n    limestone  = 2.711,\n    malachite  = 4.000,\n    chromite   = 4.540,\n    natron     = 1.550,\n--  tier 3\n    acanthite  = 7.200,\n    garnierite = 2.600,\n    petalite   = 2.412,\n    pyrite     = 5.010,\n--  tier 4\n    cobaltite  = 6.33,\n    cryolite   = 2.95,\n    gold       = 19.30,\n    kolbeckite = 2.37,\n--  tier 5\n    columbite  = 5.38,\n    illmenite  = 4.55,\n    rhodonite  = 3.76,\n    vanadinite = 6.95,\n-- refined materials\n--  tier 1\n    hydrogen   = 0.07,\n    oxygen     = 1.0,\n    aluminum   = 2.70,\n    carbon     = 2.27,\n    iron       = 7.85,\n    silicon    = 2.33\n}\n\nfunction round(num, numDecimalPlaces)\n    local mult = 10 ^ (numDecimalPlaces or 0)\n    if numDecimalPlaces ~= nil then\n        return math.floor(num * mult + 0.5) / mult\n    else\n        return math.floor((num * mult + 0.5) / mult)\n    end\nend\n\nfunction matStatus(percent, statusLimit, statusText, statusColor)\n    for i = 1, #statusLimit-1 do\n        if percent <= statusLimit[i] and percent >= statusLimit[i+1] then\n            return '<td class=\"tablerow status'..i..'\">'..statusText[i]..'</td>'\n        end\n    end\n    if percent > 100 then\n        return '<td class=\"tablerow status1\">'..statusText[1]..'</td>'\n    else\n        value = #statusLimit-1\n        return '<td class=\"tablerow status'..value..'\">'..statusText[value]..'</td>'\n    end\nend\n\nfunction matRow(mat, density, mass, max, matUnits)\n    local liters = mass / density\n    local total\n    local unitSuffix\n    if matUnits == 0 then\n        total = round(mass / 1000, 1)\n        unitSuffix = \"T\"\n    elseif matUnits == 1 or (matUnits == 3 and liters >= autoUnitsThreshold) then\n        total = round(liters / 1000, 2)\n        unitSuffix = \"KL\"\n    else\n        total = round(liters, 1)\n        unitSuffix = \"L\"\n    end\n    local percent = math.ceil(((math.ceil(liters - 0.5) / (max * 1000)) * 100))\n    local status = matStatus(percent, statusLimit, statusText, statusColor)\n    return [[\n        <tr>\n            <td class=\"tablerow\">]] ..\n                mat:sub(1, 1):upper() ..\n                mat:sub(2):lower() ..\n                [[</td>\n            <td class=\"tablerow\">]] ..\n                total ..\n                unitSuffix ..\n            [[</td>\n            <td class=\"tablerow\">]] ..\n                percent ..\n            [[%</td>]] ..\n                status .. [[\n        </tr>\n    ]]\nend\n\nlocal matRowsHtml = \"\"\nfor i = 1, #rows do\n    matRowsHtml = matRowsHtml .. matRow(rows[i], matDensity[rows[i]], matMass[rows[i]], maxVol[rows[i]], units)\nend\n\nhtml =\n[[\n<style>\n    .title {\n        font-size: 8.5vw;\n        text-align: center;\n        font-family: \"Consolas\";\n        font-weight: 900;\n        margin-top: 3vw;\n    }\n    .table {\n        font-family: \"Consolas\";\n        margin-left: auto;\n        margin-right: auto;\n        width: 80%;\n        font-size: 4vw;\n    }\n    .tableheader {\n        font-size: 4.7vw;\n        background-color: blue;\n        color: white;\n    }\n    .tablerow {\n        text-align: center;\n        font-weight: 900;\n        font-size: 4.7vw;\n        padding: 0px;\n    }\n    .status1 {\n        font-size: ]]..statusFontSize..[[vw;\n        color: ]]..status1Color..[[;\n    }\n    .status2 {\n        font-size: ]]..statusFontSize..[[vw;\n        color: ]]..status2Color..[[;\n    }\n    .status3 {\n        font-size: ]]..statusFontSize..[[vw;\n        color: ]]..status3Color..[[;\n    }\n    .status4 {\n        font-size: ]]..statusFontSize..[[vw;\n        color: ]]..status4Color..[[;\n    }\n</style>\n<div class=\"title\"> ]] ..\n    title .. [[\n</div>\n<table class=\"table\">\n    </br>\n    <tr class=\"tableheader\">\n        <th>Material</th>\n        <th>Qty</th>\n        <th>Levels</th>\n        <th>Status</th>\n    ]] ..\n    matRowsHtml .. [[\n</table>\n</div>\n]]\n\nscreen.setHTML(html)\n","filter":{"args":[{"value":"Live"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"2"}],"methods":[],"events":[]}
